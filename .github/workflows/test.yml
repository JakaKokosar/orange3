name: CI Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

env:
  UV_SYSTEM_PYTHON: 1
  PYTHONWARNINGS: once

jobs:
  run_tests:
      runs-on: ${{ matrix.os }}
      continue-on-error: ${{ matrix.experimental }}
      timeout-minutes: 20
      name: >-
        ${{ matrix.dependencies }}${{ matrix.orange_base_nightly && '(nightly)' || '' }},
        ${{ matrix.pyqt }},
        py${{ matrix.python-version }} (${{ matrix.os }})
      strategy:
        fail-fast: false
        matrix:
          os: [macos-latest, windows-latest, ubuntu-latest]
          python-version: ['3.10', '3.11', '3.12', '3.13']
          dependencies: [latest]
          pyqt: [pyqt5]
          orange_base_nightly: [false]
          experimental: [false]
          include:
              # test with pyqt6
            - os: windows-latest
              python-version: '3.13'
              dependencies: latest
              pyqt: pyqt6
              orange_base_nightly: false
              experimental: false

            - os: macos-latest
              python-version: '3.13'
              dependencies: latest
              pyqt: pyqt6
              orange_base_nightly: false
              experimental: false

            - os: ubuntu-latest
              python-version: '3.13'
              dependencies: latest
              pyqt: pyqt6
              orange_base_nightly: false
              experimental: false


            # test with oldest dependencies
            - os: windows-latest
              python-version: '3.10'
              dependencies: oldest
              pyqt: pyqt5
              orange_base_nightly: false
              experimental: false

            - os: macos-latest
              python-version: '3.10'
              dependencies: oldest
              pyqt: pyqt5
              orange_base_nightly: false
              experimental: false

            - os: ubuntu-latest
              python-version: '3.10'
              dependencies: oldest
              pyqt: pyqt5
              orange_base_nightly: false
              experimental: false


            # test with nightly orange-canvas-core and orange-widget-base
            - os: windows-latest
              python-version: '3.13'
              dependencies: latest
              pyqt: pyqt6
              orange_base_nightly: true
              experimental: true

            - os: macos-latest
              python-version: '3.13'
              dependencies: latest
              pyqt: pyqt6
              orange_base_nightly: true
              experimental: true

            - os: ubuntu-latest
              python-version: '3.13'
              dependencies: latest
              pyqt: pyqt6
              orange_base_nightly: true
              experimental: true  

          #     name: Latest
          #   - os: windows-latest
          #     python-version: '3.12'
          #     tox_env: pyqt6
          #     name: PyQt6
          #   - os: macos-latest
          #     python-version: '3.12'
          #     tox_env: pyqt6
          #     name: PyQt6   # libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libxcb-shape0 libxcb-cursor0     libegl1

      steps:
        - name: Install linux system dependencies
          if: matrix.os == 'ubuntu-latest'
          run: |
            sudo apt-get update
            sudo apt-get install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libxcb-shape0 libxcb-cursor0 glibc-tools libegl1

        - uses: actions/checkout@v4
          with:
            submodules: 'true'
            fetch-depth: '2'

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install uv package manager
          uses: astral-sh/setup-uv@v6
          with:
            version: 'latest'
            # cache: true 

        - name: Install Orange and dependencies
          shell: bash
          run: |
            uv pip install -U pip pytest pytest-xdist

            uv pip install -r requirements-${{ matrix.pyqt }}.txt

            # if nightly
            if [ "${{ matrix.orange_base_nightly }}" = "true" ]; then
              uv pip install "git+https://github.com/biolab/orange-canvas-core@master"
              uv pip install "git+https://github.com/biolab/orange-widget-base@master" 
              uv pip install "git+https://github.com/pyqtgraph/pyqtgraph@master"
            fi

            if [ "${{ matrix.dependencies }}" = "oldest" ]; then
              # Check resolution strategy: https://docs.astral.sh/uv/concepts/resolution/#resolution-strategy
              uv pip install -e . --resolution lowest-direct 
            else
              uv pip install -e .
            fi
            
        - name: Run tests
          shell: bash
          run: |
            if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
              # catchsegv xvfb-run -a -s "$XVFBARGS" uv run --no-project python -m unittest -v Orange.tests Orange.widgets.tests
              catchsegv xvfb-run -a -s "$XVFBARGS" uv run --no-project pytest --dist loadscope -n auto Orange/
            else
              # uv run --no-project python -m unittest -v Orange.tests Orange.widgets.tests
              uv run --no-project pytest --dist loadscope -n auto Orange/
            fi
            
    
  # run_coverage:
  #     runs-on: ${{ matrix.os }}
  #     timeout-minutes: 15
  #     name: Test with database support (${{matrix.os}})
  #     strategy:
  #       fail-fast: false
  #       matrix:
  #         os: [macos-latest, windows-latest, ubuntu-latest]
  #         python-version: ['3.10']

  #     services:
  #       postgres:
  #         image: orangedm/postgres:11
  #         env:
  #           POSTGRES_USER: postgres_user
  #           POSTGRES_PASSWORD: postgres_password
  #           POSTGRES_DB: postgres_db
  #         ports:
  #           - 5432:5432
  #         options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

  #       SQLServer:
  #         image: mcr.microsoft.com/mssql/server:2017-latest
  #         env:
  #           ACCEPT_EULA: Y
  #           SA_PASSWORD: sqlServerPassw0rd
  #         ports:
  #           - 1433:1433

  #     steps:
  #       - uses: actions/checkout@v4
  #       - name: Set up Python ${{ matrix.python-version }}
  #         uses: actions/setup-python@v5
  #         with:
  #           python-version: ${{ matrix.python-version }}


  #       - name: Install uv package manager
  #         uses: astral-sh/setup-uv@v6
  #         with:
  #           version: 'latest'
  #           # cache: true --resolution lowest

  #       - name: Install Orange and dependencies
  #         run: |
  #           uv pip install -U pip
  #           uv pip install -r requirements-pyqt.txt
  #           uv pip install -e .

  #       - name: Run tests
  #         run: |
  #           uv run --no-project python -m unittest -v Orange.tests 



